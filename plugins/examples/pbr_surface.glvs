#version 430

//***** begin interface of view.glsl ***********************************
mat4 get_projection_matrix();
mat4 get_modelview_matrix();
mat3 get_normal_matrix();
//***** end interface of view.glsl ***********************************

uniform mat4 light_space_matrix;

layout(location = 0) in vec4 position;
layout(location = 1) in vec4 color;
layout(location = 2) in vec3 normal;
layout(location = 3) in vec2 texcoord;

out vec4 position_eye;
out vec4 position_light_space;
out vec3 normal_eye;
out vec2 texcoord_fs;
out vec4 color_fs;

void main()
{
	position_eye = get_modelview_matrix() * position;
	position_light_space = light_space_matrix * position;
	//position_light_space.xyz /= position_light_space.w;

	normal_eye = normalize(get_normal_matrix() * normal);
	texcoord_fs = texcoord;
	color_fs = vec4(0.5);//color;

	gl_Position = get_projection_matrix() * position_eye;
}
