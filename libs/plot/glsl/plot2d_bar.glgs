#version 330 core

layout(points) in;
layout(triangle_strip, max_vertices = 4) out;

in VO {
	vec4 color;
	vec4 secondary_color;
	vec3 position_window;
	float size;
} vi[];

out vec4 color_fs;

uniform float bar_width;
uniform int bar_coordinate_index = 1;
uniform float bar_base_window = 0.0;

//***** begin interface of view.glsl ***********************************
mat4 get_modelview_matrix();
mat4 get_projection_matrix();
mat4 get_modelview_projection_matrix();
mat4 get_inverse_modelview_matrix();
mat4 get_inverse_modelview_projection_matrix();
mat3 get_normal_matrix();
mat3 get_inverse_normal_matrix();
//***** end interface of view.glsl ***********************************

//***** begin interface of plot_lib.glsl ***********************************
uniform float attribute_min[8];
uniform float attribute_max[8];
float tick_space_from_attribute_space(int ai, float value);
float attribute_space_from_tick_space(int ai, float value);
float window_space_from_tick_space(int ai, float value);
float tick_space_from_window_space(int ai, float value);
vec3 plot_space_from_window_space(vec3 pnt);
vec3 window_space_from_plot_space(vec3 pnt);
vec3 world_space_from_plot_space(vec3 pnt);
vec3 map_color(in float attributes[8], in vec3 base_color, int idx = 0);
float map_opacity(in float attributes[8], in float base_opacity, int idx = 0);
float map_size(in float attributes[8], in float base_size);
//***** end interface of plot_lib.glsl ***********************************


void main()
{
	color_fs = vi[0].color;
	vec3 min_window = vi[0].position_window;
	min_window[bar_coordinate_index]=min(vi[0].position_window[bar_coordinate_index],bar_base_window);
	vec3 max_window = vi[0].position_window;
	max_window[bar_coordinate_index]=max(vi[0].position_window[bar_coordinate_index],bar_base_window);
	vec3 min_plot = plot_space_from_window_space(min_window);
	min_plot[1-bar_coordinate_index] -= 0.5*bar_width;
	vec3 max_plot = plot_space_from_window_space(max_window);
	max_plot[1-bar_coordinate_index] += 0.5*bar_width;
	gl_Position = get_modelview_projection_matrix()*vec4(world_space_from_plot_space(min_plot),1.0);
	EmitVertex();
	vec3 p = min_plot;
	p[0] = max_plot[0];
	gl_Position = get_modelview_projection_matrix()*vec4(world_space_from_plot_space(p),1.0);
	EmitVertex();
	gl_Position = get_modelview_projection_matrix()*vec4(world_space_from_plot_space(max_plot),1.0);
	EmitVertex();
	p = max_plot;
	p[0] = min_plot[0];
	gl_Position = get_modelview_projection_matrix()*vec4(world_space_from_plot_space(p),1.0);
	EmitVertex();
	gl_Position = get_modelview_projection_matrix()*vec4(world_space_from_plot_space(min_plot),1.0);
	EmitVertex();
	EndPrimitive();
}