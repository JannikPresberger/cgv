#version 330 core

in vec2 uv;
in vec4 color_fs;
in vec4 secondary_color_fs;
in float percentual_blend_width;
in float percentual_splat_size;
in float percentual_core_size;
in float percentual_point_size;

uniform float depth_offset = 0.0;

//***** begin interface of fragment.glfs ***********************************
uniform float gamma = 2.2;
void finish_fragment(vec4 color);
//***** end interface of fragment.glfs ***********************************

//***** begin interface of splat.glsl ***********************************
vec4 compute_blended_color_with_halo(
	in float percentual_radial_position,
	in vec4 core_color, in float percentual_core_size,
	in vec4 halo_color, in float percentual_point_size,
	in float percentual_blend_width);
//***** end interface of surface.glsl ***********************************

void main()
{
	float percentual_radial_position = length(uv);
	if (percentual_radial_position > percentual_splat_size)
		discard;

	finish_fragment(compute_blended_color_with_halo(
		percentual_radial_position, color_fs, percentual_core_size,
		secondary_color_fs, percentual_point_size, percentual_blend_width));

	gl_FragDepth = gl_FragCoord.z+depth_offset;
}