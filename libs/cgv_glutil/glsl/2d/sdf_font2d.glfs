#version 150

//***** begin interface of fragment2d.glfs ***********************************
uniform sampler2D tex;

uniform vec4 border_color = vec4(1.0);
uniform float border_width = 0.0;
uniform float border_radius = 0.0;
uniform float feather_width = 1.0;
uniform float feather_origin = 0.5;

vec2 get_shape_size();
vec4 get_color();
void override_color(in vec4 color);
void finish_sdf_fragment2d(in float signed_distance, in vec2 texcoords);
void finish_sdf_fragment2d(in float signed_distance);
void finish_fragment2d(in vec2 texcoords);
void finish_fragment2d();
//***** end interface of fragment2d.glfs ***********************************

uniform float font_size;

in vec2 pix_coord;
in vec2 tex_coord;

float median(float r, float g, float b) {
	return max(min(r, g), min(max(r, g), b));
}

float screenPxRange() {
	float screen_size = font_size;
	float src_size = 48.0;
	float pixel_range = 8.0;
	return max((screen_size/src_size) * pixel_range, 1.0);
}

void main() {
	
	vec4 mtsd = texture(tex, tex_coord).rgba;
	float sd = median(mtsd.r, mtsd.g, mtsd.b);
	float screenPxDistance = screenPxRange()*(sd - 0.5);
	float opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);

	vec4 bgColor = vec4(0.0, 0.0, 0.0, 0.0);
	vec4 fgColor = vec4(0.0, 0.0, 0.0, 1.0);

	vec4 color = get_color();
	
	if(sd == 0.0)
		discard;

	float signed_distance = -(screenPxRange()*(sd-0.5) + 0.5);
	signed_distance -= border_radius;
	signed_distance -= feather_origin*feather_width;

	finish_sdf_fragment2d(signed_distance);
}
